{"ast":null,"code":"var _jsxFileName = \"/Users/seungchaelee/Desktop/abx/TypeScript-Voca/src/component/Day.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Word from \"./Word\";\nimport useFetch from \"../hooks/useFetch\";\nimport Loading from \"./Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Day() {\n  _s();\n\n  // const day = useParams().day;\n  const {\n    day\n  } = useParams(); // const wordList = mock.words.filter(word => word.day === Number(day));\n  // const [words, setWords] = useState([]);\n  // useEffect(() => {\n  //   fetch(`http://localhost:3001/words?day=${day}`)\n  //   .then(res => {\n  //     return res.json()\n  //   })\n  //   .then(data => {\n  //     setWords(data);\n  //   });\n  // }, [day]);\n\n  const words = useFetch(`http://localhost:3001/words?day=${day}`);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Day \", day]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), words.length === 0 && /*#__PURE__*/_jsxDEV(Loading, {\n      text: \"\\uB2E8\\uC5B4 \\uAC00\\uC838\\uC624\\uB294 \\uC911\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: words.map(word => /*#__PURE__*/_jsxDEV(Word, {\n          words: word\n        }, word.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Day, \"3V9q46wJfouPe54xCTaDUpaLrQ4=\", false, function () {\n  return [useParams, useFetch];\n});\n\n_c = Day;\n\nvar _c;\n\n$RefreshReg$(_c, \"Day\");","map":{"version":3,"names":["React","useParams","Word","useFetch","Loading","Day","day","words","length","map","word","id"],"sources":["/Users/seungchaelee/Desktop/abx/TypeScript-Voca/src/component/Day.js"],"sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Word from \"./Word\";\nimport useFetch from \"../hooks/useFetch\";\nimport Loading from \"./Loading\";\n\nexport default function Day() {\n  // const day = useParams().day;\n  const { day } = useParams();\n  // const wordList = mock.words.filter(word => word.day === Number(day));\n  // const [words, setWords] = useState([]);\n\n  // useEffect(() => {\n  //   fetch(`http://localhost:3001/words?day=${day}`)\n  //   .then(res => {\n  //     return res.json()\n  //   })\n  //   .then(data => {\n  //     setWords(data);\n  //   });\n  // }, [day]);\n\n  const words = useFetch(`http://localhost:3001/words?day=${day}`);\n\n  return (\n    <>\n      <h2>Day {day}</h2>\n      {words.length === 0 && <Loading text=\"단어 가져오는 중\" />}\n      <table>\n        <tbody>\n          {words.map((word) =>\n            <Word words={word} key={word.id} />\n          )}\n        </tbody>\n      </table>\n    </>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,eAAe,SAASC,GAAT,GAAe;EAAA;;EAC5B;EACA,MAAM;IAAEC;EAAF,IAAUL,SAAS,EAAzB,CAF4B,CAG5B;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMM,KAAK,GAAGJ,QAAQ,CAAE,mCAAkCG,GAAI,EAAxC,CAAtB;EAEA,oBACE;IAAA,wBACE;MAAA,mBAASA,GAAT;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEGC,KAAK,CAACC,MAAN,KAAiB,CAAjB,iBAAsB,QAAC,OAAD;MAAS,IAAI,EAAC;IAAd;MAAA;MAAA;MAAA;IAAA,QAFzB,eAGE;MAAA,uBACE;QAAA,UACGD,KAAK,CAACE,GAAN,CAAWC,IAAD,iBACT,QAAC,IAAD;UAAM,KAAK,EAAEA;QAAb,GAAwBA,IAAI,CAACC,EAA7B;UAAA;UAAA;UAAA;QAAA,QADD;MADH;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA,gBADF;AAaD;;GA/BuBN,G;UAENJ,S,EAcFE,Q;;;KAhBQE,G"},"metadata":{},"sourceType":"module"}