{"ast":null,"code":"var _jsxFileName = \"/Users/seungchaelee/Desktop/abx/TypeScript-Voca/src/component/Word.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Loading from \"./Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Word(_ref) {\n  _s();\n\n  let {\n    words: w\n  } = _ref;\n  const [words, setWords] = useState(w);\n  const [isShow, setIsShow] = useState(false);\n  const [isDone, setIsDone] = useState(words.isDone);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function toggleShow() {\n    setIsShow(!isShow);\n  }\n\n  const toggleDone = async () => {\n    // setIsDone(!isDone);\n    const res = await fetch(`http://localhost:3001/words/${words.id}`, {\n      method: \"PUT\",\n      headers: {\n        'content-Type': 'application/json'\n      },\n      body: JSON.stringify({ ...words,\n        isDone: !isDone\n      })\n    });\n\n    if (res.ok) {\n      setIsDone(!isDone);\n    }\n\n    const data = await res.json();\n    return data;\n  };\n\n  async function del() {\n    if (!isLoading) {\n      setIsLoading(true);\n\n      if (window.confirm('삭제 ?')) {\n        const res = await fetch(`http://localhost:3001/words/${words.id}`, {\n          method: \"DELETE\"\n        });\n\n        if (res.ok) {\n          setWords({\n            id: 0\n          });\n          setIsLoading(false);\n          alert('삭제 완료');\n        }\n\n        const data = await res.json();\n        return data;\n      }\n    }\n  }\n\n  if (words.id === 0) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      className: isDone ? \"off\" : \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isDone,\n          onChange: toggleDone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: words.eng\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: isShow && words.kor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleShow,\n          children: [\"\\uB73B \", isShow ? \"숨기기\" : \"보기\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: del,\n          className: \"btn_del\",\n          children: isLoading ? /*#__PURE__*/_jsxDEV(Loading, {\n            text: \"\\uC0AD\\uC81C \\uC911\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 66\n          }, this) : \"삭제\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Word, \"Ou7QqR09/iQNRY1TPoaESV5Uz70=\");\n\n_c = Word;\n\nvar _c;\n\n$RefreshReg$(_c, \"Word\");","map":{"version":3,"names":["React","useState","Loading","Word","words","w","setWords","isShow","setIsShow","isDone","setIsDone","isLoading","setIsLoading","toggleShow","toggleDone","res","fetch","id","method","headers","body","JSON","stringify","ok","data","json","del","window","confirm","alert","eng","kor"],"sources":["/Users/seungchaelee/Desktop/abx/TypeScript-Voca/src/component/Word.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Loading from \"./Loading\";\n\nexport default function Word({ words: w }) {\n  const [words, setWords] = useState(w);\n  const [isShow, setIsShow] = useState(false);\n  const [isDone, setIsDone] = useState(words.isDone);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function toggleShow() {\n    setIsShow(!isShow);\n  }\n\n  const toggleDone = async () => {\n    // setIsDone(!isDone);\n    const res = await fetch(`http://localhost:3001/words/${words.id}`, {\n      method: \"PUT\",\n      headers: {\n        'content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        ...words,\n        isDone: !isDone\n      }),\n    });\n\n    if (res.ok) {\n      setIsDone(!isDone);\n    }\n    const data = await res.json();\n\n    return data;\n  }\n\n  async function del() {\n    if (!isLoading) {\n      setIsLoading(true);\n      if (window.confirm('삭제 ?')) {\n        const res = await fetch(`http://localhost:3001/words/${words.id}`, {\n          method: \"DELETE\",\n        });\n\n        if (res.ok) {\n          setWords({ id: 0 });\n          setIsLoading(false);\n          alert('삭제 완료');\n        }\n        const data = await res.json();\n\n        return data;\n      }\n    }\n\n  }\n\n  if (words.id === 0) {\n    return null;\n  }\n\n  return (\n    <>\n      <tr className={isDone ? \"off\" : \"\"}>\n        <td>\n          <input type=\"checkbox\" checked={isDone} onChange={toggleDone} />\n        </td>\n        <td>{words.eng}</td>\n        <td>{isShow && words.kor}</td>\n        <td>\n          <button onClick={toggleShow}>뜻 {isShow ? \"숨기기\" : \"보기\"}</button>\n          <button onClick={del} className=\"btn_del\">{isLoading ? <Loading text=\"삭제 중\" /> : \"삭제\"}</button>\n        </td>\n      </tr>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}